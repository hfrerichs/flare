#!/usr/bin/env python
import os
import sys, getopt
from subprocess import call
import flare.pyplot as fplt


def exit_on_error(message):
    print "error: ", message
    sys.exit(2)




def main(cmd, argv):
    THIS = os.path.dirname(__file__)

    # run FLARE backend
    if cmd == 'run':
        run_conf = 'run.conf'

        usage    = 'usage: flare run -c <config_file>'
        try:
            opts, args = getopt.getopt(argv,"hc:",["config="])
        except getopt.GetoptError:
            print 'error: invalid option or missing argument!'
            print usage
            sys.exit(2)

        for opt, arg in opts:
            if opt == '-h':
                print usage
                sys.exit()
            elif opt in ('-c', '--config'):
                run_conf = arg

        flare = os.path.join(THIS, "FLARE")
        call([flare, cmd, run_conf])


    # plot connection length data
    elif cmd in ('plot_lc'):
        grid_file = 'grid.dat'
        data_file = 'output.txt'

        usage     = 'usage: flare {} -g <grid_file> -d <data_file>'.format(cmd)
        try:
            opts, args = getopt.getopt(argv,"hg:d:",["grid=", "data="])
        except getopt.GetoptError:
            print 'error: invalid option or missing argument!'
            print usage
            sys.exit(2)

        for opt, arg in opts:
            if opt == '-h':
                print usage
                sys.exit()
            elif opt in ('-g', '--grid'):
                grid_file = arg
            elif opt in ('-e', '--data'):
                data_file = arg

        fplt.plot_lc(grid_file, data_file)


if __name__ == "__main__":
    if len(sys.argv) == 1:
        exit_on_error("no command given!")

    main(sys.argv[1], sys.argv[2:])
