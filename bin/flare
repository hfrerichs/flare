#!/usr/bin/env python
import argparse
import os
from subprocess import call
import sys

import flare.pyplot as fplt


# 1. run FLARE backend
def run(args):
    THIS = os.path.dirname(__file__)
    flare = os.path.join(THIS, "FLARE")
    call([flare, args.cmd, args.control_file])


# 2. connection length and other data plots
def plot(args):
    fplt.plot_lc(args.geometry_file, args.data_file, qplot=args.qplot)


def main():
    # create main parser
    parser      = argparse.ArgumentParser()
    subparsers  = parser.add_subparsers(title='subcommands', dest='cmd')

    # 1. create parser for FLARE backend
    parser_run  = subparsers.add_parser("run", help="run FLARE backend")
    parser_run.add_argument("-c", "--control_file", default="run.conf", help="set run control file (default: run.conf)")
    parser_run.set_defaults(func=run)

    # 2. create parser for connection length and other data plots
    parser_plot = subparsers.add_parser("plot", help="plot connection length and other data")
    parser_plot.add_argument("qplot", choices=['lc', 'lcs', 'lc_bwd', 'lc_fwd'], help="data quantity")
    parser_plot.add_argument("-g", "--geometry_file", default="grid.dat")
    parser_plot.add_argument("-d", "--data_file", default="output.txt")
    parser_plot.set_defaults(func=plot)

    # parse the args and call whatever subcommand was selected
    args = parser.parse_args()
    args.func(args)


if __name__ == "__main__":
    main()
