#!/bin/bash

main() {

# set main command (run or subroutine)
cmd=$1
shift

# set default values
ctrl_file=run.conf
procs=1
mpiexec="mpiexec -n"
debug=false
debugger="gdb --args"
this=$(readlink -f "$0")
bindir=$(dirname $this)
flare=${bindir}/FLARE


# parse argument list
while getopts ":c:p:m:dD:h" opt; do
    case $opt in
    h)
        echo -e "Running FLARE ...\n"
        echo -e "usage: flare run [options]\n"
        echo "Available options:"
        echo "    -c file                 provide alternative control file (default: run.conf)"
        echo "    -p #                    parallel execution on # processors"
        echo "    -m command              provide alternative MPI command"
        echo "    -d                      run FLARE through debugger"
        echo "    -D debugger             run FLARE through selected debugger"
        exit 0
        ;;
    c)
        ctrl_file=$OPTARG
        ;;
    p)
        procs=$OPTARG
        ;;
    d)
        debug=true
        ;;
    D)
        debug=true
        debugger=$OPTARG
        ;;
    \?)
        echo "invalid option: $OPTARG! See 'flare run -h'." 1>&2
        exit 1
        ;;
    :)
        echo "invalid option: $OPTARG requires an argument" 1>&2
        exit 1
        ;;
    esac
done
shift $((OPTIND -1))


# run FLARE
if $debug; then
    prefix=$debugger
fi
$prefix $mpiexec $procs $flare $cmd $ctrl_file

}



config() {
run_conf=run.conf
if [ -e "$run_conf" ]; then
    echo "error: $run_conf already exists!"
    exit 1
fi
echo -e "&RunControl\n"                                 > $run_conf
echo    "   ! Choose input from database"              >> $run_conf
echo    "   Machine         =  'select machine'"       >> $run_conf
echo    "   Configuration   =  'select configuration'" >> $run_conf

echo -e "\n"                                           >> $run_conf
echo    "   ! Choose which sub-program to run"         >> $run_conf
echo    "   Run_Type        =  'select what to to'"    >> $run_conf
echo -e "\n/"                                          >> $run_conf

}



command=$1
shift
case $command in
-h|--help)
    echo -e "FLARE - a Field Line Analysis and Reconstruction Environment\n"
    echo -e "usage: flare {run,config,info,plot,equi2d,equi3d,geometry} ..."
    echo "    run                 run FLARE backend"
    echo "    config              create template run configuration file"
    echo "    info                query data file for available data"
    echo "    plot                plot data file (e.g. connection length)"
    echo "    equi2d              access axisymmetric equilibrium data"
    echo "    equi3d              non-axisymmetric equilibrium related functions"
    echo "    geometry            user defined geometry functions"
    exit 0
    ;;
run)
    main run $@
    ;;
subroutine)
    subroutine=$1
    shift
    main "$command $subroutine" $@
    ;;
config)
    config
    ;;
info)
    flare-info $@
    ;;
plot)
    flare-plot $@
    ;;
equi2d)
    flare-equi2d $@
    ;;
equi3d)
    flare-equi3d $@
    ;;
geometry)
    flare-geometry $@
    ;;
"")
    echo "error: no command given. See 'flare --help'."
    exit 1
    ;;
*)
    echo "error: $command is not a flare command. See 'flare --help'."
    exit 1
    ;;
esac
